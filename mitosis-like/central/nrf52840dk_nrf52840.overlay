
// For more help, browse the DeviceTree documentation at https: //docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https: //nrfconnect.github.io/vscode-nrf-connect/devicetree/nrfdevicetree.html

/ {
	km {
		//  compatible = "gpio-keys";
		compatible = "gpio-km";
		col0: column_0 {
			gpios = <&gpio1 10 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "Column 0";
		};
		col1: column_1 {
			gpios = <&gpio1 11 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "Column 1";
		};
		col2: column_2 {
			gpios = <&gpio1 12 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			label = "Column 2";
		};

		row0: row_0 {
			gpios = <&gpio0 2 GPIO_ACTIVE_HIGH>;
			label = "Row 0";
		};
		row1: row_1 {
			gpios = <&gpio0 3 GPIO_ACTIVE_HIGH>;
			label = "Row 1";
		};
		row2: row_2 {
			gpios = <&gpio0 4 GPIO_ACTIVE_HIGH>;
			label = "Row 2";
		};
		row3: row_3 {
			gpios = <&gpio0 28 GPIO_ACTIVE_HIGH>;
			label = "Row 3";
		};
	};

	aliases {
		col0 = &col0;
		col1 = &col1;
		col2 = &col2;
		row0 = &row0;
		row1 = &row1;
		row2 = &row2;
		row3 = &row3;
	};

	chosen {
		// zephyr,console = &uart1;
	};
};

&i2c0 {
	status = "disabled";
};

&qspi {
	status = "disabled";
};

&pwm0 {
	status = "disabled";
};

&spi3 {
	status = "disabled";
};

&uart1 {
	current-speed = <57600>;
};

&uart1_default {
	group2 {
		psels = <NRF_PSEL(UART_TX, 1, 9)>;
	};

	group1 {
		psels = <NRF_PSEL(UART_RX, 0, 5)>;
	};
};

&uart0_default {
	group1 {
		psels = <NRF_PSEL(UART_TX, 0, 6)>, <NRF_PSEL(UART_RTS, 0, 1)>;
	};
};

&uart0_sleep {
	group1 {
		psels = <NRF_PSEL(UART_TX, 0, 6)>, <NRF_PSEL(UART_RX, 0, 8)>, <NRF_PSEL(UART_CTS, 0, 7)>;
	};
};

&uart1_sleep {
	group1 {
		psels = <NRF_PSEL(UART_RX, 1, 1)>;
	};
};

&uart1_sleep {
	group1 {
		psels = <NRF_PSEL(UART_RX, 1, 1)>, <NRF_PSEL(UART_TX, 0, 9)>;
		/delete-property/ low-power-enable;
	};
};

&uart1_sleep {
	group1 {
		psels = <NRF_PSEL(UART_RX, 1, 1)>, <NRF_PSEL(UART_TX, 1, 9)>;
	};
};

&uart1_sleep {
	group1 {
		psels = <NRF_PSEL(UART_RX, 0, 5)>, <NRF_PSEL(UART_TX, 1, 9)>;
	};
};

&uart0_sleep {
	group1 {
		psels = <NRF_PSEL(UART_TX, 0, 6)>,
						<NRF_PSEL(UART_RX, 0, 8)>,
						<NRF_PSEL(UART_CTS, 0, 7)>,
						<NRF_PSEL(UART_RTS, 0, 1)>;
		/delete-property/ low-power-enable;
	};
};
